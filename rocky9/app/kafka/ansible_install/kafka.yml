---
- hosts: kafka, kafkamain
  become: yes
  vars:
    kafka_version_major: "X.XX-"
    kafka_version_minor: "X.X.X"
    kafka_home: "/opt/kafka"
    kafka_user: "qubit"
    kafka_group: "qubit"
    jmx_port: "8781"
    proxy: "http://XXX.XXX.XXX.XXX:3128/"

  tasks:
    - name: Stop and disable firewalld
      systemd:
        name: firewalld
        state: stopped
        enabled: no

    - name: Install necessary dependenciesa
      environment:
        http_proxy: "{{proxy}}"
        https_proxy: "{{proxy}}"
      package:
        name: "{{ item }}"
        state: present
      loop:
        - libXft
        - java-21-openjdk-devel
        - wget
        - tar
        - unzip

    - name: Ensure Kafka group exists
      group:
        name: "{{ kafka_group }}"
        state: present

    - name: Create Kafka user
      user:
        name: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        create_home: no

    - name: Ensure Kafka home directory exists
      file:
        path: "{{ kafka_home }}"
        state: directory
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        mode: '0755'

    - name: Download Kafka binaries
      environment:
        http_proxy: "{{proxy}}"
        https_proxy: "{{proxy}}"

      get_url:
        url: "https://downloads.apache.org/kafka/{{ kafka_version_minor }}/kafka_{{ kafka_version_major }}{{kafka_version_minor}}.tgz"
        dest: "/tmp/kafka.tgz"

    - name: Extract Kafka binaries
      unarchive:
        src: "/tmp/kafka.tgz"
        dest: "{{ kafka_home }}"
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        mode: '0755'
        remote_src: yes

    - name: Ensure Kafka config directory exists
      file:
        path: "{{ kafka_home }}/config"
        state: directory
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        mode: '0755'

    - name: Ensure Kafka data directory exists
      file:
        path: "{{ kafka_home }}/kafka-data"
        state: directory
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"
        mode: '0755'

    - name: Configure Kafka server properties
      template:
        src: ./server.properties.j2
        dest: "{{ kafka_home }}/config/server.properties"
        owner: "{{ kafka_user }}"
        group: "{{ kafka_group }}"

    - name: Create Kafka systemd service file
      copy:
        dest: /etc/systemd/system/kafka.service
        content: |
          [Unit]
          Description=Apache Kafka Server
          Documentation=http://kafka.apache.org/documentation/
          Requires=network.target
          After=network.target

          [Service]
          User={{ kafka_user }}
          Group={{ kafka_group }}
          Environment=JMX_PORT={{ jmx_port }}
          ExecStart={{ kafka_home }}/kafka_{{ kafka_version_major }}{{ kafka_version_minor }}/bin/kafka-server-start.sh {{ kafka_home }}/config/server.properties
          ExecStop={{ kafka_home }}/kafka_{{ kafka_version_major }}{{ kafka_version_minor }}/bin/kafka-server-stop.sh
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Start Kafka service
      systemd:
        name: kafka
        state: restarted
        enabled: yes

